<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- Video表数据的存取 -->
<mapper namespace="factory.dao.VideoDao">
	<resultMap type="factory.entity.Video" id="VideoDaoMap">
		<id property="id" column="id"></id>
		<result property="carId" column="car_id"></result>
		<result property="siteId" column="site_id"></result>
		<result property="serialNumber" column="serial_number"></result>
		<result property="videoRTMPid" column="video_RTMPid"></result>
		<result property="videoHLSid" column="video_HLSid"></result>
		<result property="delStatus" column="del_status"></result>
		<association property="car" javaType="factory.entity.Car">
			<id property="id" column="id" />
			<result property="status" column="status"/>
			<result property="license" column="license" />
		</association>
		<association property="site" javaType="factory.entity.Site">
			<id property="id" column="id" />
			<result property="siteName" column="site_name" />
		</association>
	</resultMap>
	
	<!-- <insert id="addVideo" parameterType="factory.entity.Video"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO video
		(car_id,license,serial_number,video_RTMPid,video_HLSid,del_status)
		VALUES(#{carId},#{license},#{serialNumber},#{videoRTMPid},#{videoHLSid},#{delStatus})
	</insert> -->
	<insert id="addVideo" parameterType="factory.entity.Video"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO video
		(car_Id,serial_number,video_RTMPid,video_HLSid,del_status)
		VALUES(#{carId},#{serialNumber},#{videoRTMPid},#{videoHLSid},#{delStatus})
	</insert> 
	<update id="deleteVideo">
		UPDATE video
		SET del_status=1
		WHERE del_status=0 AND
		id=#{videoId}
	</update>
	
	<update id="editVideo" parameterType="factory.entity.Video">
		UPDATE video
		SET
		serial_number=#{serialNumber},video_RTMPid=#{videoRTMPid},video_HLSid=#{videoHLSid}
		WHERE site_id=-1 and del_status=0 and id=#{id}
	</update>
	
	<select id="queryVideoByserial_number" resultType="factory.entity.Video">
		SELECT *
		FROM video
		WHERE del_status=0 and serial_number=#{serialNumber}
	</select>
	
	<select id="queryVideoByid" resultMap="VideoDaoMap">
		select *
		from video
		where del_status=0 and id=#{id}
	</select>
	<select id="queryAllVideo" resultMap="VideoDaoMap">
		select video.*,car.license,car.status,site.site_name
		from video LEFT JOIN car on video.car_id=car.id LEFT JOIN site ON site.id=car.site_id
		where video.site_id=-1
		and video.del_status=0		
		order by video.car_Id
	</select>
	
	<select id="queryCarWhichNotVideo" resultType="factory.entity.Car">
		select * from car
			where id not in(
			select car_id
			from video
			where del_status=0
			) and car_type=0 and car.del_status=0;
	</select>
 	<select id="queryVideoWhichNotCar" resultType="factory.entity.Video">
		select * 
			from video
			where del_status=1 and site_id =-1 
	</select>
 	<!-- <select id="queryVideoWhichNotCar" resultType="factory.entity.Video">
		select * 
			from video
			where del_status=1 and license=Null
	</select> -->
	<select id="fuzzyqueryVideoByCarLicense"  resultType="factory.entity.Video">
		select * 
		from video where video.del_status=0 and license like CONCAT('%',#{license},'%')
	</select>
	<select id="queryVideoByCarLicense"  resultType="factory.entity.Video">
		select * 
		from video,car
		where video.site_id=-1 and video.del_status=0 and video.car_id=car.id and car.license = #{license}
	</select>
	
	<select id="queryVideoByDriverId" resultMap="VideoDaoMap">
		select *
		from video,car,user
		where video.car_id = car.id and car.driver_id=user.id and user.id=#{driverId}
		and video.del_status=0 
	</select>
	
	<select id="queryVideoByCarId" resultMap="VideoDaoMap">
		select video.*,car.license,car.status,site.site_name
		from video LEFT JOIN car on video.car_id=car.id LEFT JOIN site ON site.id=car.site_id
		where video.car_id = #{carId} AND video.del_status=0 
	</select>
	
	<select id="queryAllFactoryVideo" resultMap="VideoDaoMap">
		select *
		from video,site
		where video.site_id = site.id
		and car_id=-1
		and video.del_status=0 
	</select>
	
	<insert id="addFactoryVideo" parameterType="factory.entity.Video"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO video
		(site_id,serial_number,video_RTMPid,video_HLSid,del_status)
		VALUES(#{siteId},#{serialNumber},#{videoRTMPid},#{videoHLSid},#{delStatus})
	</insert> 
	
	<select id="querySiteWhichNotVideo" resultType="factory.entity.Site">
		select * from site
			where id not in(
			select site_id
			from video
			where del_status=0
			) and site.del_status=0
	</select>
	
	<select id="queryFactoryVideoBySiteId" resultMap="VideoDaoMap">
		select *
		from video,site
		where video.site_id = #{siteId} AND video.del_status=0 and video.site_id=site.id 
	</select>
	
	<update id="editFactoryVideo" parameterType="factory.entity.Video">
		UPDATE video
		SET
		serial_number=#{serialNumber},video_RTMPid=#{videoRTMPid},video_HLSid=#{videoHLSid}
		WHERE car_id=-1 and del_status=0 and id=#{id}
	</update>
	<select id="queryFactoryVideoBySiteName"  resultType="factory.entity.Video">
		select * 
		from video,site
		where video.del_status=0 and car_id=-1 and video.site_id= site.id and site.site_Name = #{license}
	</select>
</mapper>